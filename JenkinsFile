pipeline {
    agent any  // This specifies that Jenkins can run the pipeline on any available agent

    environment {
        MAVEN_HOME = 'C:/Program Files/Apache Software Foundation/apache-maven-3.9.9'  // Update this path if necessary
        JAVA_HOME = 'C:/Program Files/Java/jdk-21'  // Update this to your JDK path if needed
        TOMCAT_HOME = 'C:/Program Files/Apache Software Foundation/Tomcat 11.0_Tomcat11_Temp'  // Update with your Tomcat installation path
        PATH = "${env.PATH};\"${MAVEN_HOME}/bin\";\"${JAVA_HOME}/bin\""
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from your Git repository
                checkout scm
            }
        }

        stage('Maven Clean and Build') {
            steps {
                // Run Maven clean and install to compile and build the project
                bat "\"${MAVEN_HOME}/bin/mvn\" clean install"
            }
        }

        stage('Install Dependencies') {
            steps {
                // Install Node dependencies
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                // Run build command (you can customize for Android or iOS if needed)
                sh 'npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/main.jsbundle'
            }
        }

        stage('Test') {
            steps {
                // Run tests with Jest and output results in JUnit format
                sh 'npm test -- --ci --reporters=jest-junit'
            }
            post {
                always {
                    junit 'path/to/test-results.xml' // Replace with actual Jest output path
                }
            }
        }

        stage('Security Scan') {
            steps {
                // Placeholder for Veracode or other security testing
                echo 'Running security scans...'
                // Add actual Veracode commands or API calls here
            }
        }

        stage('Deploy') {
            steps {
                // Deploy built artifacts to development environment
                echo 'Deploying to Tomcat server...'
                // Commands for deployment to Tomcat or other environment
            }
        }

        stage('Deploy to Tomcat') {
            steps {
                // Deploy the build folder to Tomcat
                bat """
                copy /y target\\case-study-project-1.0.0.war \"${TOMCAT_HOME}\\webapps\\case-study-project.war\"
                """
            }
        }

        stage('Restart Tomcat') {
            steps {
                // Restart Tomcat to ensure the application is deployed
                bat "\"${TOMCAT_HOME}\\bin\\shutdown.bat\""
                bat "\"${TOMCAT_HOME}\\bin\\startup.bat\""
            }
        }
    }

    post {
        success {
            // Actions to take if the build is successful
            echo 'Build and Deployment Successful'
        }

        failure {
            // Actions to take if the build fails
            echo 'Build or Deployment Failed!'
        }
    }
}
